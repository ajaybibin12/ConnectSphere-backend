name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: connectsphere_user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: connectsphere_db
        ports:
          - 5432:5432

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install Dependencies
        run: |
          python -m venv env
          source env/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Migrations
        run: |
          source env/bin/activate
          alembic upgrade head

      - name: Run Tests
        run: |
          source env/bin/activate
          pytest -v

  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: test  # Deploy only if tests pass

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Debug SSH Setup
        run: |
          echo "Current User: $(whoami)"
          echo "Current Directory: $(pwd)"
          echo "Home Directory: $HOME"
          ls -lah ~/

      - name: Fix Permissions and Set Up SSH
        run: |
          sudo mkdir -p ~/.ssh
          sudo chown -R $(whoami) ~/.ssh
          sudo chmod 700 ~/.ssh
          touch ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H 13.53.200.254 >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        run: |
          ssh -i ~/.ssh/id_rsa ubuntu@13.53.200.254 << 'EOF'
          cd /home/ubuntu/connectShere/ConnectSphere-backend  # Navigate to project
          git pull origin main  # Pull latest changes
          source env/bin/activate  # Activate virtual environment
          pip install -r requirements.txt  # Install dependencies
          alembic upgrade head  # Apply database migrations
          sudo systemctl restart fastapi.service  # Restart FastAPI service
          EOF
