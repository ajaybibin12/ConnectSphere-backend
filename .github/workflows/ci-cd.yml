name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: connectsphere_user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: connectsphere_db
        ports:
          - 5432:5432

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install Dependencies
        run: |
          python -m venv env
          source env/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Migrations
        run: |
          source env/bin/activate
          alembic upgrade head

      - name: Run Tests
        run: |
          source env/bin/activate
          pytest -v

  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: test  # Deploy only if tests pass

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # ✅ Debug Environment
      - name: Debug Environment
        run: |
          echo "Current User: $(whoami)"
          echo "Current Directory: $(pwd)"
          echo "Home Directory: $HOME"
          ls -lah ~/

      # ✅ Ensure SSH Directory Exists
      - name: Ensure SSH Directory Exists
        run: |
          mkdir -p "$HOME/.ssh"
          chmod 700 "$HOME/.ssh"
          ls -lah "$HOME/.ssh"

      # ✅ Debug SSH Key (Check if it exists and is correctly set)
      - name: Debug SSH Key
        run: |
          echo "Checking SSH Key..."
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" | wc -l
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" | head -n 2

      # ✅ Set Up SSH Keys Correctly
      - name: Set Up SSH Keys
        run: |
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" | tr -d '\r' | sed 's/\\n/\n/g' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H 13.53.200.254 > ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      # ✅ Verify SSH Key Format
      - name: Verify SSH Key Format
        run: |
          file ~/.ssh/id_rsa
          head -n 2 ~/.ssh/id_rsa
          cat ~/.ssh/id_rsa | wc -l

      # ✅ Ensure SSH Agent is Running
      - name: Add SSH Key to SSH Agent
        run: |
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_rsa
          ssh-add -l

      # ✅ Test SSH Connection
      - name: Test SSH Connection
        run: |
          ssh -v -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ubuntu@13.53.200.254 "echo 'SSH connection successful!'"

      # ✅ Deploy to EC2
      - name: Deploy to EC2
        run: |
          ssh -i "$HOME/.ssh/id_rsa" -o StrictHostKeyChecking=no ubuntu@13.53.200.254 << 'EOF'
            cd /home/ubuntu/connectShere/ConnectSphere-backend
            git pull origin main
            source env/bin/activate
            pip install -r requirements.txt
            alembic upgrade head
            sudo systemctl restart fastapi.service
          EOF
